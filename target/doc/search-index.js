var searchIndex = {};
searchIndex["sliding_windows"] = {"doc":"This crate provides an iterator adaptor that yields sliding windows into the elements of the wrapped Iterator.","items":[[3,"Storage","sliding_windows","This holds the backing allocation for the `Window` of a `Adaptor`.",null,null],[3,"Adaptor","","See sliding_windows for more information.",null,null],[11,"new","","Create a new `Storage` with a given window size. This will allocate twice as much memory as is needed to store the Window for performance reasons.",0,{"inputs":[{"name":"usize"}],"output":{"name":"storage"}}],[11,"from_vec","","Create a new `Storage` with a given window size from a given struct implementing `Into<Vec>`. The contents of the Vec will be removed. This will reuse the allocation of the Vec instead of allocating new memory.",0,{"inputs":[{"name":"s"},{"name":"usize"}],"output":{"name":"storage"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"new","","This creates a new Adaptor. Usually you should be using",1,{"inputs":[{"name":"i"},{"name":"storage"}],"output":{"name":"adaptor"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[8,"IterExt","","",null,null],[11,"sliding_windows","","",2,{"inputs":[{"name":"self"},{"name":"storage"}],"output":{"name":"adaptor"}}]],"paths":[[3,"Storage"],[3,"Adaptor"],[8,"IterExt"]]};
initSearch(searchIndex);
